// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EmptySearchMessage 1`] = `
<View
  style={
    Object {
      "flex": 1,
      "justifyContent": "center",
    }
  }
>
  <Text
    style={
      Object {
        "color": "#696969",
        "marginBottom": 25,
        "textAlign": "center",
      }
    }
  >
    Popular thing to search for:
  </Text>
  <Text
    style={
      Object {
        "color": "#696969",
        "textAlign": "center",
      }
    }
  >
    Articles
  </Text>
  <Text
    style={
      Object {
        "color": "#696969",
        "textAlign": "center",
      }
    }
  >
    Topics
  </Text>
  <Text
    style={
      Object {
        "color": "#696969",
        "textAlign": "center",
      }
    }
  >
    Journalists
  </Text>
</View>
`;

exports[`Search Bar CancelButton 1`] = `
<View
  style={
    Object {
      "justifyContent": "center",
      "paddingRight": 16,
    }
  }
>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
  >
    <Text
      style={
        Array [
          Object {
            "fontFamily": "GillSansMTStd-Medium",
            "fontSize": 18,
            "lineHeight": undefined,
            "marginTop": 5,
          },
          Object {
            "color": "#000000",
          },
        ]
      }
    >
      Cancel
    </Text>
  </View>
</View>
`;

exports[`Search Bar should render correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#FFFFFF",
      "flexDirection": "row",
      "marginBottom": 10,
      "paddingLeft": 15,
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#EFEFEF",
        "flex": 1,
        "flexDirection": "row",
        "justifyContent": "space-between",
        "marginRight": 8,
        "paddingHorizontal": 10,
        "paddingVertical": 10,
        "width": "100%",
      }
    }
  >
    <View
      style={
        Object {
          "flexDirection": "row",
          "width": "85%",
        }
      }
    >
      <View
        style={
          Object {
            "marginTop": 1,
          }
        }
      >
        <RNSVGSvgView
          align="xMidYMid"
          bbHeight="20"
          bbWidth="22"
          focusable={false}
          height="20"
          meetOrSlice={0}
          minX={0}
          minY={0}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              Object {
                "flex": 0,
                "height": 20,
                "width": 22,
              },
            ]
          }
          vbHeight={18}
          vbWidth={20}
          width="22"
        >
          <RNSVGGroup>
            <RNSVGGroup
              fill={null}
              fillRule={0}
              propList={
                Array [
                  "fill",
                  "fillRule",
                ]
              }
            >
              <RNSVGGroup
                propList={
                  Array [
                    "stroke",
                  ]
                }
                stroke={4278190080}
              >
                <RNSVGGroup>
                  <RNSVGGroup
                    matrix={
                      Array [
                        1,
                        0,
                        0,
                        1,
                        0,
                        -3,
                      ]
                    }
                  >
                    <RNSVGCircle
                      cx="11.268"
                      cy="11.232"
                      matrix={
                        Array [
                          0.7071067811865476,
                          0.7071067811865475,
                          -0.7071067811865475,
                          0.7071067811865476,
                          11.242544155877283,
                          -4.677902576697321,
                        ]
                      }
                      propList={
                        Array [
                          "strokeWidth",
                        ]
                      }
                      r="6.75"
                      strokeWidth="1.5"
                    />
                    <RNSVGPath
                      d="M5.611 16.889L2.782 19.718"
                      propList={
                        Array [
                          "strokeWidth",
                          "strokeLinecap",
                        ]
                      }
                      strokeLinecap={1}
                      strokeWidth="2"
                    />
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGGroup>
            </RNSVGGroup>
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
      <TextInput
        allowFontScaling={true}
        autoFocus={true}
        defaultValue="test"
        editable={true}
        keyboardType="web-search"
        onChangeText={[Function]}
        placeholder="Search"
        rejectResponderTermination={true}
        style={
          Object {
            "backgroundColor": "#EFEFEF",
            "color": "#000000",
            "fontFamily": "GillSansMTStd-Medium",
            "fontSize": 18,
            "lineHeight": undefined,
            "marginLeft": 10,
            "paddingTop": 4,
          }
        }
        underlineColorAndroid="transparent"
        value="test"
      />
    </View>
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <RNSVGSvgView
        align="xMidYMid"
        bbHeight={16}
        bbWidth={16}
        focusable={false}
        height={16}
        meetOrSlice={0}
        minX={0}
        minY={0}
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "flex": 0,
              "height": 16,
              "width": 16,
            },
          ]
        }
        vbHeight={13}
        vbWidth={13}
        width={16}
      >
        <RNSVGGroup>
          <RNSVGGroup
            fill={null}
            propList={
              Array [
                "fill",
              ]
            }
          >
            <RNSVGGroup
              propList={
                Array [
                  "stroke",
                ]
              }
              stroke={4278190080}
            >
              <RNSVGGroup>
                <RNSVGGroup>
                  <RNSVGGroup>
                    <RNSVGPath
                      d="M0.591 0.591L12.409 12.409"
                      matrix={
                        Array [
                          -1,
                          0,
                          0,
                          1,
                          13,
                          0,
                        ]
                      }
                    />
                    <RNSVGPath
                      d="M0.591 0.591L12.409 12.409"
                      matrix={
                        Array [
                          1,
                          0,
                          0,
                          1,
                          0,
                          0,
                        ]
                      }
                    />
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGGroup>
            </RNSVGGroup>
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
  </View>
  <View
    style={
      Object {
        "justifyContent": "center",
        "paddingRight": 16,
      }
    }
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <Text
        style={
          Array [
            Object {
              "fontFamily": "GillSansMTStd-Medium",
              "fontSize": 18,
              "lineHeight": undefined,
              "marginTop": 5,
            },
            Object {
              "color": "#000000",
            },
          ]
        }
      >
        Cancel
      </Text>
    </View>
  </View>
</View>
`;
