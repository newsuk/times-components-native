version: 2.1

executors:
    node:
        docker:
            - image: circleci/node:10.13.0
        resource_class: 2xlarge

commands:
    install-dependencies:
        description: 'Install Dependencies'
        steps:
            - run:
                  name: Install Dependencies
                  command: yarn install --frozen-lockfile --ignore-engines
                  working_directory: ~/project/

    restore-yarn:
        description: 'Restore Yarn Package Cache'
        steps:
            - restore_cache:
                  key: yarn-packages-{{ checksum "yarn.lock" }}

    save-yarn:
        description: 'Save Yarn Package Cache'
        steps:
            - save_cache:
                  key: yarn-packages-{{ checksum "yarn.lock" }}
                  paths:
                      - ~/.cache/yarn
    install-fontforge:
        description: 'Install fontforge'
        steps:
            - run:
                  name: Install fontforge
                  command: |
                    sudo apt-get update;
                    sudo apt-get install software-properties-common;
                    sudo add-apt-repository ppa:fontforge/fontforge -y;
                    sudo apt-get install fontforge;

jobs:
    setup:
        executor: node
        steps:
            - checkout
            - install-fontforge
            - restore-yarn
            - install-dependencies
            - save-yarn
            - persist_to_workspace:
                root: ./
                paths:
                    - ./

    run_lint:
        executor: node
        steps:
            - checkout
            - attach_workspace:
                  at: ./
            - run:
                  name: Run Lint
                  command: yarn lint
                  working_directory: ~/project/

    run_typecheck:
      executor: node
      steps:
        - checkout
        - attach_workspace:
            at: ./
        - run:
            name: Run Type Check
            command: yarn typecheck
            working_directory: ~/project/

    run_noplatform_tests:
        executor: node
        steps:
            - checkout
            - attach_workspace:
                  at: ./
            - run:
                  name: Run No Specific Platform Tests
                  command: |
                      yarn test:common
                  working_directory: ~/project/

    run_android_tests:
        executor: node
        steps:
            - checkout
            - attach_workspace:
                  at: ./
            - run:
                  name: Run Android Tests
                  command: |
                      yarn test:android
                  working_directory: ~/project/

    run_ios_tests:
        executor: node
        steps:
            - checkout
            - attach_workspace:
                  at: ./
            - run:
                  name: Run iOS Tests
                  command: yarn test:ios
                  working_directory: ~/project/

    publish_android:
        executor: node
        steps:
            - checkout
            - attach_workspace:
                  at: ./
            - run:
                  name: Build and publish android js bundles
                  command: |
                      # Install JDK and android SDK
                      sudo apt-get update
                      sudo apt install default-jdk
                      cd /home
                      sudo wget https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip
                      sudo unzip sdk-tools-linux-4333796.zip
                      sudo rm sdk-tools-linux-4333796.zip
                      sudo mkdir /home/android-sdk
                      sudo mv tools /home/android-sdk/tools
                      export ANDROID_SDK_ROOT=/home/android-sdk
                      echo $(yes | sudo $ANDROID_SDK_ROOT/tools/bin/sdkmanager --licenses)
                      sudo chmod ugo+rwx "android-sdk"
                      cd ~/project/
                      # TODO: move above lines in a docker image
                      yarn android:build-lib
                      sh ./scripts/publish-android.sh
                  working_directory: ~/project/

    publish_ios:
        executor: node
        steps:
            - checkout
            - attach_workspace:
                  at: ./
            - run:
                  name: Build and publish iOS js bundles
                  command: |
                      yarn ios:build-lib
                      sh ./scripts/publish-ios.sh
                  working_directory: ~/project/

    publish_notes:
        executor: node
        steps:
        - checkout
        - run:
            name: Tag release & generate GitHub notes
            command: sh scripts/publish-notes.sh

workflows:
    version: 2

    run_tests:
        jobs:
            - setup
            - run_lint:
                  requires:
                      - setup
            - run_typecheck:
                requires:
                  - setup
            - run_noplatform_tests:
                  requires:
                      - setup
            - run_android_tests:
                  requires:
                      - setup
            - run_ios_tests:
                  requires:
                      - setup
            - hold_release:
                  type: approval
                  filters:
                    branches:
                        only:
                            - master
                  requires:
                      - run_lint
                      - run_typecheck
                      - run_noplatform_tests
                      - run_android_tests
                      - run_ios_tests
            - publish_android:
                  requires:
                      - hold_release
            - publish_ios:
                  requires:
                      - hold_release
            - publish_notes:
                requires:
                  - publish_android
                  - publish_ios
            - hold_release_beta:
                  type: approval
                  filters:
                    branches:
                        ignore:
                            - master
                  requires:
                      - run_lint
                      - run_typecheck
                      - run_noplatform_tests
                      - run_android_tests
                      - run_ios_tests
            - publish_android:
                  requires:
                      - hold_release_beta
            - publish_ios:
                  requires:
                      - hold_release_beta
